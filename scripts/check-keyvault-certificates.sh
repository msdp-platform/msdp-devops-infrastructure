#!/bin/bash

# Azure Key Vault Certificate Check Script
# Checks if certificates exist in Azure Key Vault and generates them if missing

set -euo pipefail

ENVIRONMENT="${1:-dev}"
KEY_VAULT_NAME="${2:-msdp-certificates-kv}"
CERTIFICATE_DIR="${3:-/tmp/certificate-management}"

if [ -z "$ENVIRONMENT" ]; then
    echo "Usage: $0 <environment> [key_vault_name] [certificate_dir]"
    echo "Example: $0 dev msdp-certificates-kv /tmp/certificate-management"
    exit 1
fi

echo "üîç Checking certificates in Azure Key Vault: $KEY_VAULT_NAME"

# Check if certificate files exist
if [ ! -d "$CERTIFICATE_DIR" ]; then
    echo "‚ùå Certificate directory not found: $CERTIFICATE_DIR"
    exit 1
fi

# Find all ExternalSecret files
EXTERNAL_SECRET_FILES=$(find "$CERTIFICATE_DIR" -name "*-externalsecret.yaml" -type f)

for externalsecret_file in $EXTERNAL_SECRET_FILES; do
    echo "üîç Processing: $externalsecret_file"
    
    # Extract certificate information
    component_name=$(yq eval '.metadata.name' "$externalsecret_file" | sed 's/-tls$//')
    cert_key="${ENVIRONMENT}-${component_name}-tls"
    key_key="${ENVIRONMENT}-${component_name}-key"
    
    echo "üìã Checking certificate: $cert_key"
    
    # Check if certificate exists in Key Vault
    if az keyvault secret show --vault-name "$KEY_VAULT_NAME" --name "$cert_key" >/dev/null 2>&1; then
        echo "‚úÖ Certificate exists in Key Vault: $cert_key"
    else
        echo "‚ùå Certificate missing in Key Vault: $cert_key"
        echo "üîß Certificate will be generated by cert-manager"
    fi
    
    # Check if private key exists in Key Vault
    if az keyvault secret show --vault-name "$KEY_VAULT_NAME" --name "$key_key" >/dev/null 2>&1; then
        echo "‚úÖ Private key exists in Key Vault: $key_key"
    else
        echo "‚ùå Private key missing in Key Vault: $key_key"
        echo "üîß Private key will be generated by cert-manager"
    fi
done

echo "‚úÖ Key Vault certificate check complete"
