name: 'Setup Environment'
description: 'Setup Kubernetes environment with Azure login and kubectl'

inputs:
  azure_client_id:
    description: 'Azure Client ID'
    required: true
  azure_tenant_id:
    description: 'Azure Tenant ID'
    required: true
  azure_subscription_id:
    description: 'Azure Subscription ID'
    required: true
  environment:
    description: 'Environment name (dev/test/prod)'
    required: true

outputs:
  cluster_name:
    description: 'AKS cluster name'
    value: ${{ steps.get-config.outputs.cluster_name }}
  resource_group:
    description: 'Azure resource group'
    value: ${{ steps.get-config.outputs.resource_group }}
  domain:
    description: 'Environment domain'
    value: ${{ steps.get-config.outputs.domain }}

runs:
  using: 'composite'
  steps:
    - name: Load Environment Configuration
      id: get-config
      shell: bash
      run: |
        echo "🔧 Loading configuration for environment: ${{ inputs.environment }}"
        
        # Load environment-specific config
        ENV_CONFIG="infrastructure/config/environments/${{ inputs.environment }}.yaml"
        
        if [ ! -f "$ENV_CONFIG" ]; then
          echo "❌ Environment config not found: $ENV_CONFIG"
          exit 1
        fi
        
        # Extract values using yq
        CLUSTER_NAME=$(yq eval '.cluster.name' "$ENV_CONFIG")
        RESOURCE_GROUP=$(yq eval '.cluster.resource_group' "$ENV_CONFIG")
        DOMAIN_BASE=$(yq eval '.domains.base // "aztech-msdp.com"' infrastructure/config/global.yaml)
        DOMAIN="${{ inputs.environment }}.${DOMAIN_BASE}"
        
        echo "cluster_name=$CLUSTER_NAME" >> $GITHUB_OUTPUT
        echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
        echo "domain=$DOMAIN" >> $GITHUB_OUTPUT
        
        echo "✅ Configuration loaded:"
        echo "  Cluster: $CLUSTER_NAME"
        echo "  Resource Group: $RESOURCE_GROUP"
        echo "  Domain: $DOMAIN"

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Get AKS credentials
      shell: bash
      run: |
        echo "🔐 Getting AKS credentials..."
        
        KUBECONFIG_FILE="/tmp/kubeconfig-${{ inputs.environment }}-$(date +%s)"
        echo "KUBECONFIG=$KUBECONFIG_FILE" >> $GITHUB_ENV
        
        az aks get-credentials \
          --resource-group ${{ steps.get-config.outputs.resource_group }} \
          --name ${{ steps.get-config.outputs.cluster_name }} \
          --file $KUBECONFIG_FILE \
          --overwrite-existing
        
        echo "✅ Connected to cluster: ${{ steps.get-config.outputs.cluster_name }}"
        
        # Verify connection
        kubectl cluster-info --request-timeout=10s
