name: "AWS and Azure OIDC Login"
description: "Composite action to login to AWS and Azure using GitHub OIDC (no static keys)."

inputs:
  aws-role-arn:
    description: "AWS IAM Role ARN to assume via OIDC"
    required: true
  aws-region:
    description: "AWS region for CLI operations (e.g., eu-west-1)"
    required: true
  azure-client-id:
    description: "Azure Entra ID Application (Client) ID for OIDC login"
    required: true
  azure-tenant-id:
    description: "Azure Entra ID Tenant ID"
    required: true
  azure-subscription-id:
    description: "Azure Subscription ID to target"
    required: true

runs:
  using: "composite"
  steps:
    # Step 1: Configure AWS credentials using OIDC. This uses the
    # configured GitHub OIDC trust to obtain short-lived credentials
    # for the specified IAM role (no static keys required).
    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    # Step 2: Azure Login using OIDC. The action exchanges the GitHub
    # OIDC token for an Azure token tied to the provided Client ID.
    # This enables subsequent az/terraform operations against the
    # provided Tenant and Subscription without client secrets.
    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure-client-id }}
        tenant-id: ${{ inputs.azure-tenant-id }}
        subscription-id: ${{ inputs.azure-subscription-id }}
# Example usage (put this in your workflow):
#
# jobs:
#   validate:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       id-token: write
#     steps:
#       - uses: actions/checkout@v4
#       - name: AWS + Azure OIDC Login
#         uses: ./.github/actions/aws-azure-login
#         with:
#           aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
#           aws-region: eu-west-1
#           azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
#           azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#           azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

