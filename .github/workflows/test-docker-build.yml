name: test-docker-build

on:
  workflow_dispatch:
    inputs:
      registry:
        description: "Registry to push to"
        type: choice
        options: [ghcr, ecr, acr]
        required: true
        default: ghcr
      repository:
        description: "Repository path/name (e.g., my/test-image or team/app)"
        required: true
        default: infra-docker-build-test
      acr_name:
        description: "ACR name (e.g., myacr) when registry=acr"
        required: false
        default: ""
      aws_region:
        description: "AWS region when registry=ecr"
        required: false
        default: eu-west-1
      platforms:
        description: "Build platforms"
        required: false
        default: linux/amd64
      extra_tags:
        description: "Extra tags (comma-separated)"
        required: false
        default: latest
      verify:
        description: "Verify manifests after push"
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create temporary Dockerfile
        id: mkdf
        shell: bash
        run: |
          set -euo pipefail
          DF="$RUNNER_TEMP/Dockerfile.test"
          cat > "$DF" <<'EOF'
          FROM alpine:3.20
          LABEL org.opencontainers.image.title="docker-build-action-test"
          RUN echo "hello from docker-build action test" > /hello.txt
          CMD ["sh","-c","cat /hello.txt && sleep 1"]
          EOF
          echo "file=$DF" >> "$GITHUB_OUTPUT"

      - name: AWS OIDC login (only for ECR)
        if: ${{ inputs.registry == 'ecr' }}
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ inputs.aws_region }}

      - name: Ensure ECR repository exists
        if: ${{ inputs.registry == 'ecr' }}
        shell: bash
        run: |
          set -euo pipefail
          aws ecr describe-repositories --repository-names "${{ inputs.repository }}" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "${{ inputs.repository }}" >/dev/null

      - name: Azure OIDC login (only for ACR)
        if: ${{ inputs.registry == 'acr' }}
        uses: ./.github/actions/cloud-login
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build and push via composite docker-build action
        uses: ./.github/actions/docker-build
        with:
          registry: ${{ inputs.registry }}
          repository: ${{ inputs.repository }}
          context: .
          file: ${{ steps.mkdf.outputs.file }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ inputs.extra_tags }}
          cache: true
          verify: ${{ inputs.verify }}
          # We already performed cloud login where needed
          use_cloud_login: false
          # Registry-specific args
          aws_region: ${{ inputs.aws_region }}
          acr_name: ${{ inputs.acr_name }}

