name: "Terraform Validate"

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Terraform working directory to validate"
        required: true
        type: string
      backend-config-file:
        description: "Path to backend configuration file"
        required: true
        type: string
      environment:
        description: "Environment name (dev, stg, prod)"
        required: false
        type: string
        default: "dev"
      cloud-segment:
        description: "Cloud segment (aws, azure)"
        required: false
        type: string
        default: "aws"
      app:
        description: "Application name"
        required: false
        type: string
        default: "infra"
      function:
        description: "Function name"
        required: false
        type: string
        default: "tfstate"
      key-salt:
        description: "Key salt for stable pipeline naming"
        required: false
        type: string
        default: ""
      terraform-version:
        description: "Terraform version to use"
        required: false
        type: string
        default: "1.13.2"
    secrets:
      AWS_ROLE_ARN:
        description: "AWS IAM role ARN for OIDC authentication"
        required: true
      AWS_ACCOUNT_ID:
        description: "AWS account ID"
        required: false
      AZURE_CLIENT_ID:
        description: "Azure client ID for OIDC authentication"
        required: true
      AZURE_TENANT_ID:
        description: "Azure tenant ID for OIDC authentication"
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: "Azure subscription ID for OIDC authentication"
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  validate:
    name: "Validate Terraform ‚Äî ${{ inputs.working-directory }}"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify S3 backend is declared
        run: bash scripts/ci/verify_s3_backend.sh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Cloud Login (AWS + Azure)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-1
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure Terraform backend
        uses: ./.github/actions/terraform-backend
        with:
          repo-shortname: infra
          project: msdp
          env: ${{ inputs.environment }}
          cloud: aws
          cloud-segment: ${{ inputs.cloud-segment }}
          app: ${{ inputs.app }}
          function: ${{ inputs.function }}
          key-salt: ${{ inputs.key-salt }}
          aws-region: eu-west-1
          use-shared-lock-table: "true"

      - name: Show resolved AWS account id
        run: echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID"

      - name: Terraform Init
        uses: ./.github/actions/terraform-init
        with:
          working-directory: ${{ inputs.working-directory }}
          backend-config-file: ${{ inputs.backend-config-file }}

      - name: Terraform Format Check
        run: |
          cd ${{ inputs.working-directory }}
          echo "Checking Terraform formatting in ${{ inputs.working-directory }}..."
          if ! terraform fmt -recursive -check; then
            echo "‚ùå Terraform files are not properly formatted"
            echo "Run 'terraform fmt -recursive' to fix formatting issues"
            terraform fmt -recursive -diff
            exit 1
          fi
          echo "‚úÖ Terraform formatting check passed"

      - name: Terraform Validate
        run: |
          cd ${{ inputs.working-directory }}
          echo "Validating Terraform configuration in ${{ inputs.working-directory }}..."
          terraform validate
          echo "‚úÖ Terraform validation passed"

      - name: Summary
        run: |
          echo "## üéØ Terraform Validation Summary"
          echo ""
          echo "**Working Directory:** ${{ inputs.working-directory }}"
          echo "**Environment:** ${{ inputs.environment }}"
          echo "**Cloud Segment:** ${{ inputs.cloud-segment }}"
          echo "**Terraform Version:** ${{ inputs.terraform-version }}"
          echo ""
          echo "‚úÖ **All validation checks passed:**"
          echo "- S3 backend configuration verified"
          echo "- Terraform formatting validated"
          echo "- Terraform syntax validated"
          echo "- Backend configuration applied"
