name: azure-network-stack
on:
  push:
    branches: [main]
    paths:
      - "infrastructure/environment/azure/network/**"
      - "config/**"
      - "infrastructure/config/**"
  workflow_dispatch:
    inputs:
      action:
        description: plan | apply | destroy
        required: true
        default: plan
      size:
        description: Optional subnet size override (large|medium|small)
        required: false
        default: ""
permissions:
  id-token: write
  contents: read

jobs:
  network-logic:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true
    steps:
      - uses: actions/checkout@v4
      - name: Cloud Login (AWS)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-1
      - name: Build network.auto.tfvars.json (from config)
        uses: ./.github/actions/network-tfvars
        with:
          size: ${{ github.event.inputs.size || '' }}
      - name: Ensure Terraform backend (S3/DynamoDB)
        uses: ./.github/actions/terraform-backend
        with:
          repo-shortname: infra
          project: msdp
          env: dev
          cloud: aws
          cloud-segment: azure
          app: network
          function: tfstate
          key-salt: infrastructure/environment/azure/network
          aws-region: eu-west-1
          use-shared-lock-table: "true"
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
      - name: Terraform Init
        uses: ./.github/actions/terraform-init
        with:
          working-directory: infrastructure/environment/azure/network
          backend-config-file: infrastructure/environment/dev/backend/backend-config.json
          terraform-version: 1.9.5
      - name: Terraform plan
        if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' }}
        working-directory: infrastructure/environment/azure/network
        run: terraform plan -out=tfplan
      - name: Terraform apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: infrastructure/environment/azure/network
        run: terraform apply -auto-approve tfplan || { terraform plan -out=tfplan && terraform apply -auto-approve tfplan; }
      - name: Terraform destroy
        # ...existing code...
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: infrastructure/environment/azure/network
        run: terraform destroy -auto-approve || { terraform plan -out=tfplan && terraform destroy -auto-approve; }
