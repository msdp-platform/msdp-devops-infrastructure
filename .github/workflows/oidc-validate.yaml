name: OIDC Validate

on:
  push:
    branches: [dev]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  validate:
    name: Validate OIDC & TF â€” ${{ matrix.cloud }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cloud: [aws, azure]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cloud Login (AWS + Azure)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-1
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Ensure Terraform backend
        uses: ./.github/actions/terraform-backend
        with:
          repo-shortname: infra
          project: msdp
          env: dev
          cloud: ${{ matrix.cloud }}
          cloud-segment: ${{ matrix.cloud }}
          app: ${{ matrix.cloud == 'aws' && 'eks' || 'aks' }}
          function: tfstate
          key-salt: infrastructure/environment/dev/${{ matrix.cloud }}/${{ matrix.cloud == 'aws' && 'eks' || 'aks' }}
          aws-region: eu-west-1
          use-shared-lock-table: "true"
      - name: Terraform Init
        uses: ./.github/actions/terraform-init
        with:
          working-directory: ${{ matrix.cloud == 'aws' && 'infrastructure/environment/dev/aws/eks' || 'infrastructure/environment/azure/aks' }}
          backend-config-file: infrastructure/environment/dev/backend/backend-config.json
      # Formatting and validation are handled by terraform-init composite action
      - name: Confirm cloud tested
        run: echo "Reusable actions validated for ${{ matrix.cloud }}"
