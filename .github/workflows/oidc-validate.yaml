name: OIDC Validate

on:
  push:
    branches: [dev]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  validate:
    name: Validate OIDC & TF — ${{ matrix.cloud }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cloud: [aws, azure]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform for fmt check
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.2

      - name: Terraform fmt check
        run: |
          set -euo pipefail
          echo "Checking Terraform formatting..."
          if ! terraform fmt -recursive -check; then
            echo "ERROR: Terraform files are not properly formatted"
            echo "Run 'terraform fmt -recursive' to fix formatting issues"
            terraform fmt -recursive -diff
            exit 1
          fi
          echo "Terraform formatting check passed"

      - name: AWS + Azure OIDC Login (local)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-1
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure Terraform backend (per cloud/app/pipeline)
        uses: ./.github/actions/terraform-backend
        with:
          repo-shortname: infra
          project: msdp
          env: dev
          cloud: aws
          cloud-segment: ${{ matrix.cloud }}
          app: ${{ matrix.cloud == 'aws' && 'eks' || 'aks' }}
          function: tfstate
          key-salt: infrastructure/environment/dev/${{ matrix.cloud }}/${{ matrix.cloud == 'aws' && 'eks' || 'aks' }}
          # pipeline-name: provisioner            # OPTIONAL — omit to use stable computed name
          aws-region: eu-west-1
          aws-account-id: 319422413814

      - name: Debug backend config
        run: |
          CFG=infrastructure/environment/dev/backend/backend-config.json
          echo "Checking backend config file: $CFG"
          test -f "$CFG" || { echo "ERROR: Backend config not found"; exit 1; }
          echo "Backend config contents:"
          cat "$CFG"

      - name: Terraform Init (AWS)
        if: ${{ matrix.cloud == 'aws' }}
        uses: ./.github/actions/terraform-init
        with:
          working-directory: infrastructure/environment/dev/aws/eks
          backend-config-file: infrastructure/environment/dev/backend/backend-config.json

      - name: Terraform Init (Azure)
        if: ${{ matrix.cloud == 'azure' }}
        uses: ./.github/actions/terraform-init
        with:
          working-directory: infrastructure/environment/dev/azure/aks
          backend-config-file: infrastructure/environment/dev/backend/backend-config.json

      - name: Terraform validate (AWS)
        if: ${{ matrix.cloud == 'aws' }}
        run: terraform validate
        working-directory: infrastructure/environment/dev/aws/eks

      - name: Terraform validate (Azure)
        if: ${{ matrix.cloud == 'azure' }}
        run: terraform validate
        working-directory: infrastructure/environment/dev/azure/aks

      - name: Verify AWS caller identity
        run: aws sts get-caller-identity || true

      - name: Verify Azure account
        run: az account show || true

      - name: Echo backend summary (AWS)
        if: ${{ matrix.cloud == 'aws' }}
        run: |
          echo "Backend provisioned for ${{ matrix.cloud }}:"
          cat infrastructure/environment/dev/backend/backend-config.json

      - name: Confirm cloud tested
        run: echo "Reusable actions validated for ${{ matrix.cloud }}"
