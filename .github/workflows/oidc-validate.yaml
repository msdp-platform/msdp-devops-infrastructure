name: OIDC Validate

on:
  push:
    branches: [dev]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  validate:
    name: Validate OIDC & TF â€” ${{ matrix.cloud }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cloud: [aws, azure]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS + Azure OIDC Login (local)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-1
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure Terraform backend (AWS dev)
        if: ${{ matrix.cloud == 'aws' }}
        uses: ./.github/actions/terraform-backend
        with:
          repo-shortname: infra
          project: msdp
          env: dev
          app: eks
          function: tfstate
          pipeline-name: provisioner
          cloud-segment: ${{ matrix.cloud }}
          cloud: aws

      - name: Terraform Init (AWS with backend config)
        if: ${{ matrix.cloud == 'aws' }}
        uses: ./.github/actions/terraform-init
        with:
          working-directory: infrastructure/environment/dev/aws/eks
          backend-config-file: infrastructure/environment/dev/backend/backend-config.json

      - name: Verify backend (AWS)
        if: ${{ matrix.cloud == 'aws' }}
        run: |
          CFG=infrastructure/environment/dev/backend/backend-config.json
          test -f "$CFG" || { echo "Missing $CFG"; exit 1; }
          echo "Backend config:"
          cat "$CFG"
          echo "S3/DDB sanity check:"
          BUCKET=$(jq -r '.bucket' "$CFG")
          TABLE=$(jq -r '.dynamodb_table' "$CFG")
          aws s3api head-bucket --bucket "$BUCKET"
          aws dynamodb describe-table --table-name "$TABLE" --query '{Status:Table.TableStatus,Key:Table.KeySchema}'

      - name: Terraform validate (AWS)
        if: ${{ matrix.cloud == 'aws' }}
        run: terraform validate
        working-directory: infrastructure/environment/dev/aws/eks

      - name: Terraform Init (Azure with local backend)
        if: ${{ matrix.cloud == 'azure' }}
        uses: ./.github/actions/terraform-init
        with:
          working-directory: infrastructure/environment/dev/azure/aks

      - name: Terraform validate (Azure)
        if: ${{ matrix.cloud == 'azure' }}
        run: terraform validate
        working-directory: infrastructure/environment/dev/azure/aks

      - name: Verify AWS caller identity
        run: aws sts get-caller-identity || true

      - name: Verify Azure account
        run: az account show || true

      - name: Echo backend summary (AWS)
        if: ${{ matrix.cloud == 'aws' }}
        run: |
          echo "Backend provisioned for ${{ matrix.cloud }}:"
          cat infrastructure/environment/dev/backend/backend-config.json

      - name: Confirm cloud tested
        run: echo "Reusable actions validated for ${{ matrix.cloud }}"
