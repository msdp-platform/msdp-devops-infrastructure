name: eks-smoke-deploy

on:
  workflow_call:
    inputs:
      cluster_name:
        description: "EKS cluster name"
        required: true
        type: string
      aws_region:
        description: "AWS region for the EKS cluster"
        required: true
        type: string
      image:
        description: "Full image reference to run (e.g., ghcr.io/org/app:tag or <account>.dkr.ecr.<region>.amazonaws.com/repo:tag)"
        required: true
        type: string
      namespace:
        description: "Namespace to run the job in"
        required: false
        default: smoke-test
        type: string
      cleanup:
        description: "Delete the Job after running"
        required: false
        default: true
        type: boolean
    secrets:
      AWS_ROLE_ARN:
        description: "AWS role to assume via OIDC for EKS access"
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      JOB_NAME: smoke-job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cloud Login (AWS OIDC)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ inputs.aws_region }}

      - name: Kubernetes setup (EKS)
        id: k8s
        uses: ./.github/actions/kubernetes-setup
        with:
          provider: eks
          cluster-name: ${{ inputs.cluster_name }}
          eks-region: ${{ inputs.aws_region }}
          namespace: ${{ inputs.namespace }}
          validate: 'true'

      - name: Render Job manifest
        id: render
        shell: bash
        env:
          MANIFEST: ${{ runner.temp }}/smoke-job.yaml
        run: |
          set -euo pipefail
          cat > "$MANIFEST" <<YAML
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: ${JOB_NAME}
            namespace: ${NAMESPACE:-${{ inputs.namespace }}}
          spec:
            backoffLimit: 0
            template:
              metadata:
                labels:
                  app: ${JOB_NAME}
              spec:
                restartPolicy: Never
                containers:
                  - name: runner
                    image: "${{ inputs.image }}"
                    command: ["sh","-c"]
                    args: ["echo eks-smoke-ok && sleep 1"]
          YAML
          echo "manifest=$MANIFEST" >> "$GITHUB_OUTPUT"

      - name: Apply Job
        shell: bash
        env:
          KUBECONFIG: ${{ steps.k8s.outputs.kubeconfig-path }}
        run: |
          set -euo pipefail
          kubectl apply -f "${{ steps.render.outputs.manifest }}"
          kubectl get job "${JOB_NAME}" -n "${{ inputs.namespace }}" -o yaml | sed -n '1,120p'

      - name: Wait for completion
        shell: bash
        env:
          KUBECONFIG: ${{ steps.k8s.outputs.kubeconfig-path }}
        run: |
          set -euo pipefail
          kubectl wait --for=condition=complete job/${JOB_NAME} -n "${{ inputs.namespace }}" --timeout=180s

      - name: Capture logs
        id: logs
        shell: bash
        env:
          KUBECONFIG: ${{ steps.k8s.outputs.kubeconfig-path }}
        run: |
          set -euo pipefail
          POD=$(kubectl get pods -n "${{ inputs.namespace }}" -l job-name=${JOB_NAME} -o jsonpath='{.items[0].metadata.name}')
          mkdir -p "$RUNNER_TEMP/eks-smoke-logs"
          kubectl logs -n "${{ inputs.namespace }}" "$POD" | tee "$RUNNER_TEMP/eks-smoke-logs/pod.log"
          echo "pod_name=$POD" >> "$GITHUB_OUTPUT"
          echo "logs_dir=$RUNNER_TEMP/eks-smoke-logs" >> "$GITHUB_OUTPUT"

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: eks-smoke-${{ github.run_id }}
          path: ${{ steps.logs.outputs.logs_dir }}

      - name: Cleanup Job (optional)
        if: ${{ inputs.cleanup }}
        shell: bash
        env:
          KUBECONFIG: ${{ steps.k8s.outputs.kubeconfig-path }}
        run: |
          set -euo pipefail
          kubectl delete job/${JOB_NAME} -n "${{ inputs.namespace }}" --ignore-not-found=true

