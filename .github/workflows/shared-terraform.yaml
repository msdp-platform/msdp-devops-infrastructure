name: Shared Terraform Pipeline

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      cloud:
        required: true
        type: string
      app:
        required: true
        type: string
      action:
        required: true
        type: string
      kubernetes_version:
        required: false
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Cloud Login (AWS + Azure)
        uses: ./.github/actions/cloud-login
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-1
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure Terraform backend
        uses: ./.github/actions/terraform-backend-enhanced
        with:
          environment: ${{ inputs.env }}
          platform: ${{ inputs.cloud }}
          component: shared-terraform
          aws_region: eu-west-1

      - name: Terraform Init
        uses: ./.github/actions/terraform-init
        with:
          working-directory: infrastructure/environment/${{ inputs.env }}/${{ inputs.cloud }}/${{ inputs.app }}
          backend-config-file: infrastructure/environment/${{ inputs.env }}/backend/backend-config.json

      - name: Terraform Format Check
        run: |
          cd infrastructure/environment/${{ inputs.env }}/${{ inputs.cloud }}/${{ inputs.app }}
          terraform fmt -check -recursive
          if [ $? -ne 0 ]; then
            echo "❌ Terraform files are not properly formatted"
            terraform fmt -recursive -diff
            exit 1
          fi
          echo "✅ Terraform formatting check passed"

      - name: Terraform Validate
        run: |
          cd infrastructure/environment/${{ inputs.env }}/${{ inputs.cloud }}/${{ inputs.app }}
          terraform validate
          echo "✅ Terraform validation passed"

      # Add plan/apply logic as needed, or leave to the calling workflow
