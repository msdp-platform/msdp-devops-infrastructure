# ArgoCD Production Environment Installation
apiVersion: v1
kind: Namespace
metadata:
  name: argocd-prod
  labels:
    environment: prod
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argocd
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-prod-install
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 5.51.6
    helm:
      values: |
        global:
          domain: aztech-msdp.com
          image:
            repository: quay.io/argoproj/argocd
            tag: v2.8.4
        server:
          service:
            type: ClusterIP
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            hosts:
              - argocd.aztech-msdp.com
            tls:
              - secretName: argocd-prod-tls
                hosts:
                  - argocd.aztech-msdp.com
          config:
            url: https://argocd.aztech-msdp.com
            application.instanceLabelKey: argocd.argoproj.io/instance
        configs:
          cm:
            application.instanceLabelKey: argocd.argoproj.io/instance
            server.rbac.log.enforce.enable: "true"
            url: https://argocd.aztech-msdp.com
          rbac:
            policy.default: role:readonly
            policy.csv: |
              p, role:admin, applications, *, */*, allow
              p, role:admin, clusters, *, *, allow
              p, role:admin, repositories, *, *, allow
              p, role:admin, certificates, *, *, allow
              p, role:admin, projects, *, *, allow
              p, role:admin, accounts, *, *, allow
              p, role:admin, gpgkeys, *, *, allow
              p, role:admin, logs, *, *, allow
              p, role:admin, exec, *, *, allow
              p, role:admin, settings, *, *, allow
              p, role:admin, applicationsets, *, *, allow
              p, role:admin, appprojects, *, *, allow
              g, platform-engineering, role:admin
        dex:
          enabled: false
        notifications:
          enabled: true
          controllers:
            enabled: true
        applicationSet:
          enabled: true
        repoServer:
          service:
            type: ClusterIP
        controller:
          service:
            type: ClusterIP
        redis:
          enabled: true
        redis-ha:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd-prod
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
