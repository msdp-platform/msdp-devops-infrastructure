apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/component: dns-controller
    app.kubernetes.io/part-of: msdp-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/component: dns-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns
        app.kubernetes.io/component: dns-controller
        app.kubernetes.io/part-of: msdp-platform
    spec:
      serviceAccountName: external-dns
      containers:
        - name: external-dns
          image: registry.k8s.io/external-dns/external-dns:v0.14.0
          args:
            - --source=service
            - --source=ingress
            - --domain-filter=aztech-msdp.com
            - --domain-filter=dev.aztech-msdp.com
            - --domain-filter=test.aztech-msdp.com
            - --domain-filter=prod.aztech-msdp.com
            - --provider=aws
            - --aws-zone-type=public
            - --aws-prefer-cname
            - --aws-batch-change-size=1000
            - --aws-batch-change-interval=10s
            - --registry=txt
            - --txt-owner-id=external-dns
            - --txt-prefix=external-dns-
            - --log-format=json
            - --log-level=info
            - --interval=1m
            - --policy=upsert-only
            - --annotation-filter=external-dns.alpha.kubernetes.io/hostname
          env:
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: aws-secret-access-key
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: aws-session-token
                  optional: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
          livenessProbe:
            httpGet:
              path: /healthz
              port: 7979
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 7979
            initialDelaySeconds: 5
            periodSeconds: 5
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
