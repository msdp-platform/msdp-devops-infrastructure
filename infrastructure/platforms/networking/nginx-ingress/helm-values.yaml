# NGINX Ingress Controller Helm Values
# This file contains the configuration for the NGINX Ingress Controller

controller:
  # Replica count
  replicaCount: 2

  # Image configuration
  image:
    registry: registry.k8s.io
    image: ingress-nginx/controller
    tag: "v1.9.4"
    digest: ""

  # Service configuration
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    externalTrafficPolicy: Local

  # Ingress class configuration
  ingressClassResource:
    name: nginx
    enabled: true
    default: true
    controllerValue: "k8s.io/ingress-nginx"

  # ConfigMap for NGINX configuration
  config:
    # Enable real IP from load balancer
    use-forwarded-headers: "true"
    compute-full-forwarded-for: "true"
    use-proxy-protocol: "false"

    # SSL configuration
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384"

    # Rate limiting
    rate-limit: "1000"
    rate-limit-window: "1m"

    # Logging
    log-format-upstream: '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent"}'

    # Performance tuning
    worker-processes: "auto"
    max-worker-connections: "16384"
    max-worker-open-files: "65536"

    # Security headers
    add-security-headers: "true"
    server-tokens: "false"

  # Metrics configuration
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
        prometheus.io/path: "/metrics"

  # Health checks
  livenessProbe:
    httpGet:
      path: /healthz
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    httpGet:
      path: /healthz
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  # Resource limits
  resources:
    requests:
      cpu: 100m
      memory: 90Mi
    limits:
      cpu: 1000m
      memory: 512Mi

  # Node selector and affinity
  nodeSelector:
    kubernetes.io/os: linux

  # Pod security context
  podSecurityContext:
    runAsUser: 101
    runAsNonRoot: true
    fsGroup: 65534

  # Container security context
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
      add:
        - NET_BIND_SERVICE
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 101

# Default backend configuration
defaultBackend:
  enabled: false
  # Disabled to avoid ImagePullBackOff issues
  # The default backend is not essential for basic functionality
  # image:
  #   repository: registry.k8s.io/ingress-nginx/defaultbackend-amd64
  #   tag: "1.5"
  #   digest: ""
  resources:
    requests:
      cpu: 10m
      memory: 20Mi
    limits:
      cpu: 10m
      memory: 20Mi

# RBAC configuration
rbac:
  create: true

# Service account configuration
serviceAccount:
  create: true
  name: ""

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Pod security policy
podSecurityPolicy:
  enabled: false

# Network policy
networkPolicy:
  enabled: false

# Admission webhooks
admissionWebhooks:
  enabled: true
  patch:
    enabled: true
    image:
      registry: registry.k8s.io
      image: ingress-nginx/kube-webhook-certgen
      tag: "v20231011-8b53cabe0"
    podAnnotations:
      sidecar.istio.io/inject: "false"
